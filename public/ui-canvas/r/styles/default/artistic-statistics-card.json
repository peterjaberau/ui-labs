{
  "name": "artistic-statistics-card",
  "type": "registry:ui",
  "dependencies": [],
  "files": [
    {
      "path": "ui-canvas/artistic-statistics-card.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface StatisticProps {\n  title: string;\n  value: string | number;\n  description?: string;\n  icon?: React.ReactNode;\n  className?: string;\n  variant?: \"default\" | \"gradient\" | \"outline\" | \"glass\" | \"neon\";\n  animation?: \"pulse\" | \"bounce\" | \"none\" | \"float\" | \"glow\";\n  trend?: number;\n}\n\nexport default function ArtisticStatisticsCard({\n  title,\n  value,\n  description,\n  icon,\n  className,\n  variant = \"default\",\n  animation = \"none\",\n  trend,\n}: StatisticProps) {\n  const variants = {\n    default: \"bg-card text-card-foreground shadow-lg dark:shadow-primary/5\",\n    gradient:\n      \"bg-gradient-to-br from-primary/90 via-primary/70 to-primary/50 text-primary-foreground shadow-xl shadow-primary/20\",\n    outline:\n      \"border border-primary/20 bg-background/50 backdrop-blur-sm hover:border-primary/40\",\n    glass:\n      \"bg-white/10 backdrop-blur-lg border border-white/20 shadow-2xl dark:bg-black/10\",\n    neon: \"bg-background border-2 border-primary shadow-[0_0_15px_rgba(var(--primary-rgb),0.5)] dark:shadow-[0_0_25px_rgba(var(--primary-rgb),0.5)]\",\n  };\n\n  const animations = {\n    none: \"\",\n    pulse: \"animate-pulse\",\n    bounce: \"animate-bounce\",\n    float: \"hover:translate-y-[-8px] transition-transform duration-300\",\n    glow: \"hover:shadow-[0_0_25px_rgba(var(--primary-rgb),0.3)] transition-shadow duration-300\",\n  };\n\n  const getTrendColor = (trend?: number) => {\n    if (!trend) return \"\";\n    return trend > 0\n      ? \"text-green-500 dark:text-green-400\"\n      : \"text-red-500 dark:text-red-400\";\n  };\n\n  const getTrendIcon = (trend?: number) => {\n    if (!trend) return null;\n    return trend > 0 ? (\n      <span className=\"inline-block rotate-45\">↗</span>\n    ) : (\n      <span className=\"inline-block -rotate-45\">↘</span>\n    );\n  };\n\n  return (\n    <div\n      className={cn(\n        \"group relative overflow-hidden rounded-xl p-6 transition-all duration-300\",\n        \"hover:scale-[1.02]\",\n        variants[variant],\n        animations[animation],\n        className,\n      )}\n    >\n      {icon && (\n        <div className=\"absolute right-4 top-4 text-4xl opacity-20 transition-transform duration-300 group-hover:scale-110 group-hover:opacity-30\">\n          {icon}\n        </div>\n      )}\n      <div className=\"space-y-3\">\n        <h3 className=\"text-sm font-medium text-muted-foreground/80\">\n          {title}\n        </h3>\n        <div className=\"flex items-baseline gap-2\">\n          <div className=\"text-3xl font-bold tracking-tight\">{value}</div>\n          {trend !== undefined && (\n            <span className={cn(\"text-sm font-medium\", getTrendColor(trend))}>\n              {trend > 0 ? \"+\" : \"\"}\n              {trend}% {getTrendIcon(trend)}\n            </span>\n          )}\n        </div>\n        {description && (\n          <p className=\"text-xs text-muted-foreground/70\">{description}</p>\n        )}\n      </div>\n      <div\n        className={cn(\n          \"absolute bottom-0 left-0 h-1 w-full\",\n          variant === \"gradient\"\n            ? \"bg-gradient-to-r from-white/20 via-white/40 to-white/20\"\n            : \"bg-gradient-to-r from-primary/20 via-primary to-primary/20\",\n        )}\n      />\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}