{
  "name": "creative-error-boundaries",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui-canvas/creative-error-boundaries.tsx",
      "content": "\"use client\";\n\nimport React, { Component, ErrorInfo, ReactNode } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  Paintbrush,\n  Eraser,\n  Bug,\n  RefreshCw,\n  Camera,\n  Share2,\n} from \"lucide-react\";\n\ninterface Props {\n  children: ReactNode;\n  theme?: \"watercolor\" | \"sketch\" | \"oil-painting\";\n  onErrorCapture?: (error: Error, errorInfo: ErrorInfo) => void;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n  showDebug: boolean;\n  errorSnapshot: string | null;\n}\n\nexport default class CreativeErrorBoundaries extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      showDebug: false,\n      errorSnapshot: null,\n    };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.props.onErrorCapture?.(error, errorInfo);\n    this.setState({\n      error,\n      errorInfo,\n      errorSnapshot: new Date().toISOString(),\n    });\n  }\n\n  private getThemeStyles() {\n    switch (this.props.theme) {\n      case \"watercolor\":\n        return \"bg-gradient-to-br from-blue-50 to-purple-50 dark:from-blue-950 dark:to-purple-950 border-blue-200 dark:border-blue-800\";\n      case \"sketch\":\n        return \"bg-zinc-50 dark:bg-zinc-950 border-zinc-200 dark:border-zinc-800\";\n      case \"oil-painting\":\n        return \"bg-gradient-to-br from-amber-50 to-rose-50 dark:from-amber-950 dark:to-rose-950 border-amber-200 dark:border-amber-800\";\n      default:\n        return \"bg-canvas-50 dark:bg-canvas-950 border-canvas-200 dark:border-canvas-800\";\n    }\n  }\n\n  private handleRetry = () => {\n    this.setState({ hasError: false, error: null, errorInfo: null });\n  };\n\n  private handleShare = () => {\n    const errorDetails = {\n      message: this.state.error?.message,\n      stack: this.state.error?.stack,\n      timestamp: this.state.errorSnapshot,\n    };\n    navigator.clipboard.writeText(JSON.stringify(errorDetails, null, 2));\n  };\n\n  private captureErrorState = () => {\n    const errorDetails = {\n      message: this.state.error?.message,\n      timestamp: this.state.errorSnapshot,\n    };\n    console.log(\"Error State Captured:\", errorDetails);\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <AnimatePresence>\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.3 }}\n            className={`${this.getThemeStyles()} relative overflow-hidden rounded-lg border-2 border-dashed p-6`}\n          >\n            <motion.div\n              className=\"absolute inset-0 opacity-10\"\n              animate={{\n                backgroundPosition: [\"0% 0%\", \"100% 100%\"],\n                backgroundSize: [\"100% 100%\", \"150% 150%\"],\n              }}\n              transition={{\n                duration: 20,\n                repeat: Infinity,\n                repeatType: \"reverse\",\n              }}\n              style={{\n                backgroundImage:\n                  \"url('data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%239C92AC' fill-opacity='0.4'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')\",\n              }}\n            />\n\n            <div className=\"relative space-y-6\">\n              {/* Artistic Error Display */}\n              <motion.div\n                className=\"text-canvas-800 dark:text-canvas-200 flex items-center space-x-3\"\n                animate={{ x: [0, 5, 0] }}\n                transition={{ duration: 2, repeat: Infinity }}\n              >\n                <Paintbrush className=\"h-6 w-6\" />\n                <h3 className=\"text-xl font-semibold\">\n                  Artistic Happy Accident\n                </h3>\n              </motion.div>\n\n              {/* Error Message as Art Description */}\n              <motion.div\n                className={`rounded-lg bg-white/50 p-6 shadow-lg backdrop-blur-sm dark:bg-black/50`}\n                whileHover={{ scale: 1.02 }}\n                transition={{ type: \"spring\" }}\n              >\n                <p className=\"text-canvas-700 dark:text-canvas-300 font-serif text-lg italic\">\n                  &quot;{this.state.error?.message}&quot;\n                </p>\n                <div className=\"text-canvas-500 dark:text-canvas-400 mt-4 text-sm\">\n                  Captured at: {this.state.errorSnapshot}\n                </div>\n              </motion.div>\n\n              {/* Action Buttons */}\n              <div className=\"flex flex-wrap items-center gap-4\">\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={this.handleRetry}\n                  className=\"bg-canvas-200 dark:bg-canvas-800 hover:bg-canvas-300 dark:hover:bg-canvas-700 flex items-center space-x-2 rounded-md px-4 py-2 transition-colors\"\n                >\n                  <RefreshCw className=\"h-4 w-4\" />\n                  <span>Try Again</span>\n                </motion.button>\n\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={this.handleShare}\n                  className=\"bg-canvas-200 dark:bg-canvas-800 hover:bg-canvas-300 dark:hover:bg-canvas-700 flex items-center space-x-2 rounded-md px-4 py-2 transition-colors\"\n                >\n                  <Share2 className=\"h-4 w-4\" />\n                  <span>Share Error</span>\n                </motion.button>\n\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={this.captureErrorState}\n                  className=\"bg-canvas-200 dark:bg-canvas-800 hover:bg-canvas-300 dark:hover:bg-canvas-700 flex items-center space-x-2 rounded-md px-4 py-2 transition-colors\"\n                >\n                  <Camera className=\"h-4 w-4\" />\n                  <span>Capture State</span>\n                </motion.button>\n              </div>\n\n              {/* Debug Info */}\n              <motion.div\n                initial={false}\n                animate={{ height: this.state.showDebug ? \"auto\" : 0 }}\n                className=\"overflow-hidden\"\n              >\n                <div className=\"rounded-lg bg-white/30 p-6 backdrop-blur-sm dark:bg-black/30\">\n                  <div className=\"mb-4 flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Bug className=\"h-4 w-4\" />\n                      <h4 className=\"font-medium\">Conservation Notes</h4>\n                    </div>\n                  </div>\n                  <pre className=\"overflow-auto rounded-lg bg-black/5 p-4 text-sm dark:bg-white/5\">\n                    {this.state.errorInfo?.componentStack}\n                  </pre>\n                </div>\n              </motion.div>\n\n              {/* Toggle Debug Button */}\n              <motion.button\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={() =>\n                  this.setState((state) => ({ showDebug: !state.showDebug }))\n                }\n                className=\"text-canvas-600 dark:text-canvas-400 text-sm underline decoration-dashed underline-offset-4\"\n              >\n                {this.state.showDebug ? \"Hide\" : \"Show\"} Technical Details\n              </motion.button>\n            </div>\n          </motion.div>\n        </AnimatePresence>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}