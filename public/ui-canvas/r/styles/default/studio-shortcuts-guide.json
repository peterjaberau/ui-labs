{
  "name": "studio-shortcuts-guide",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "files": [
    {
      "path": "ui-canvas/studio-shortcuts-guide.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useMemo } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Command, Search, X } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\ninterface ShortcutItemProps {\n  keys: string[];\n  description: string;\n  category: string;\n}\n\ninterface ShortcutCategory {\n  [key: string]: Array<{\n    keys: string[];\n    description: string;\n  }>;\n}\n\nconst DEFAULT_SHORTCUTS: ShortcutCategory = {\n  general: [\n    { keys: [\"Ctrl\", \"S\"], description: \"Save current work\" },\n    { keys: [\"Ctrl\", \"Z\"], description: \"Undo last action\" },\n    { keys: [\"Ctrl\", \"Y\"], description: \"Redo last action\" },\n    { keys: [\"Ctrl\", \"Shift\", \"Z\"], description: \"Redo alternative\" },\n    { keys: [\"Ctrl\", \"/\"], description: \"Toggle shortcuts guide\" },\n  ],\n  tools: [\n    { keys: [\"B\"], description: \"Brush tool\" },\n    { keys: [\"E\"], description: \"Eraser tool\" },\n    { keys: [\"M\"], description: \"Move tool\" },\n    { keys: [\"L\"], description: \"Lasso tool\" },\n    { keys: [\"P\"], description: \"Pen tool\" },\n    { keys: [\"I\"], description: \"Eyedropper tool\" },\n  ],\n};\n\ninterface StudioShortcutsGuideProps {\n  className?: string;\n  /** Custom shortcuts to merge with or override default shortcuts */\n  shortcuts?: Partial<ShortcutCategory>;\n  /** Whether to use only custom shortcuts (true) or merge with defaults (false) */\n  customOnly?: boolean;\n}\n\ntype CategoryState = string | null;\ntype SearchState = string;\n\nconst ShortcutItem: React.FC<ShortcutItemProps> = ({ keys, description }) => (\n  <motion.div\n    initial={{ opacity: 0, y: 5 }}\n    animate={{ opacity: 1, y: 0 }}\n    exit={{ opacity: 0, y: -5 }}\n    className=\"group flex items-center justify-between rounded-lg p-2 transition-colors hover:bg-accent/50\"\n  >\n    <span className=\"text-sm text-muted-foreground group-hover:text-foreground\">\n      {description}\n    </span>\n    <div className=\"flex gap-1\">\n      {keys.map((key, index) => (\n        <React.Fragment key={index}>\n          <motion.kbd\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            className=\"pointer-events-none inline-flex h-7 select-none items-center gap-1 rounded border bg-muted px-2.5 font-mono text-[12px] font-medium text-muted-foreground hover:bg-accent hover:text-accent-foreground\"\n          >\n            {key}\n          </motion.kbd>\n          {index < keys.length - 1 && (\n            <span className=\"text-muted-foreground\">+</span>\n          )}\n        </React.Fragment>\n      ))}\n    </div>\n  </motion.div>\n);\n\nexport default function StudioShortcutsGuide({\n  className,\n  shortcuts: customShortcuts,\n  customOnly = false,\n}: StudioShortcutsGuideProps) {\n  const [searchQuery, setSearchQuery] = useState<SearchState>(\"\");\n  const [selectedCategory, setSelectedCategory] = useState<CategoryState>(null);\n\n  // Merge default and custom shortcuts or use only custom shortcuts\n  const shortcuts = useMemo(() => {\n    if (customOnly) {\n      return customShortcuts || {};\n    }\n    return {\n      ...DEFAULT_SHORTCUTS,\n      ...customShortcuts,\n      // Deep merge categories if they exist in both\n      ...(customShortcuts &&\n        Object.entries(customShortcuts).reduce((acc, [category, items]) => {\n          if (DEFAULT_SHORTCUTS[category]) {\n            acc[category] = [...DEFAULT_SHORTCUTS[category], ...(items ?? [])];\n          } else {\n            acc[category] = items ?? [];\n          }\n          return acc;\n        }, {} as ShortcutCategory)),\n    };\n  }, [customShortcuts, customOnly]);\n\n  const filterShortcuts = (shortcuts: ShortcutCategory): ShortcutCategory => {\n    return Object.entries(shortcuts).reduce((acc, [category, items]) => {\n      if (selectedCategory && category !== selectedCategory) {\n        return acc;\n      }\n\n      const filteredItems = items.filter(\n        (item) =>\n          item.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          item.keys.some((key) =>\n            key.toLowerCase().includes(searchQuery.toLowerCase()),\n          ),\n      );\n\n      if (filteredItems.length > 0) {\n        acc[category] = filteredItems;\n      }\n\n      return acc;\n    }, {} as ShortcutCategory);\n  };\n\n  const filteredShortcuts = filterShortcuts(shortcuts as ShortcutCategory);\n  const categories = Object.keys(shortcuts);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className={cn(\n        \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n        className,\n      )}\n    >\n      <div className=\"flex items-center justify-between border-b bg-muted/50 px-4 py-2\">\n        <div className=\"flex items-center\">\n          <Command className=\"mr-2 h-4 w-4\" />\n          <h3 className=\"text-sm font-semibold\">Keyboard Shortcuts</h3>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          {categories.map((category) => (\n            <motion.button\n              key={category}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() =>\n                setSelectedCategory(\n                  selectedCategory === category ? null : category,\n                )\n              }\n              className={cn(\n                \"rounded-md px-2 py-1 text-xs font-medium transition-colors\",\n                selectedCategory === category\n                  ? \"bg-primary text-primary-foreground\"\n                  : \"bg-muted text-muted-foreground hover:bg-muted/80\",\n              )}\n            >\n              {category}\n            </motion.button>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"relative p-4\">\n        <div className=\"mb-4 flex items-center gap-2 rounded-md border bg-muted/30 px-3 py-2\">\n          <Search className=\"h-4 w-4 text-muted-foreground\" />\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            placeholder=\"Search shortcuts...\"\n            className=\"flex-1 bg-transparent text-sm outline-none placeholder:text-muted-foreground\"\n          />\n          {searchQuery && (\n            <button\n              onClick={() => setSearchQuery(\"\")}\n              className=\"text-muted-foreground hover:text-foreground\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          )}\n        </div>\n\n        <AnimatePresence mode=\"wait\">\n          {Object.entries(filteredShortcuts).map(([category, items]) => (\n            <motion.div\n              key={category}\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: \"auto\" }}\n              exit={{ opacity: 0, height: 0 }}\n              className=\"mb-4 last:mb-0\"\n            >\n              <h4 className=\"mb-2 text-sm font-medium capitalize text-foreground/70\">\n                {category}\n              </h4>\n              <div className=\"space-y-1\">\n                <AnimatePresence>\n                  {items.map((shortcut, index) => (\n                    <ShortcutItem\n                      key={`${category}-${index}`}\n                      keys={shortcut.keys}\n                      description={shortcut.description}\n                      category={category}\n                    />\n                  ))}\n                </AnimatePresence>\n              </div>\n            </motion.div>\n          ))}\n        </AnimatePresence>\n      </div>\n    </motion.div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}