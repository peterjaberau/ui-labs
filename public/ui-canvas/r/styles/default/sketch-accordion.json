{
  "name": "sketch-accordion",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-accordion"
  ],
  "files": [
    {
      "path": "ui-canvas/sketch-accordion.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\";\nimport { cn } from \"@/lib/utils\";\n\nconst SketchAccordion = AccordionPrimitive.Root;\n\nconst SketchAccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"group relative mb-2 overflow-hidden rounded-lg border border-neutral-200 bg-white transition-all dark:border-neutral-800 dark:bg-neutral-950\",\n      \"before:absolute before:inset-0 before:z-0 before:bg-[url('/paper-texture.png')] before:opacity-50 before:content-['']\",\n      className,\n    )}\n    {...props}\n  />\n));\nSketchAccordionItem.displayName = \"SketchAccordionItem\";\n\nconst SketchAccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"group/trigger flex flex-1 items-center justify-between py-4 pl-4 pr-2 text-sm font-medium transition-all [&[data-state=open]>svg]:rotate-180\",\n        \"after:absolute after:left-0 after:top-0 after:h-full after:w-1 after:bg-neutral-200 after:content-[''] dark:after:bg-neutral-800\",\n        \"hover:bg-neutral-50 dark:hover:bg-neutral-900\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <div className=\"relative mr-2 h-5 w-5 shrink-0 overflow-hidden rounded-full border border-neutral-300 dark:border-neutral-700\">\n        <svg\n          className=\"absolute inset-0 h-4 w-4 translate-x-0.5 translate-y-0.5 stroke-[1.5] transition-transform duration-200\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          style={{\n            filter: \"url(#pencil-stroke)\",\n          }}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      </div>\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n));\nSketchAccordionTrigger.displayName = \"SketchAccordionTrigger\";\n\nconst SketchAccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div\n      className={cn(\n        \"relative px-4 pb-4 pt-0\",\n        \"after:absolute after:left-0 after:top-0 after:h-full after:w-1 after:bg-neutral-200 after:content-[''] dark:after:bg-neutral-800\",\n        className,\n      )}\n    >\n      {children}\n    </div>\n  </AccordionPrimitive.Content>\n));\nSketchAccordionContent.displayName = \"SketchAccordionContent\";\n\n// SVG Filter for pencil effect\nconst PencilFilter = () => (\n  <svg width=\"0\" height=\"0\">\n    <defs>\n      <filter id=\"pencil-stroke\">\n        <feTurbulence\n          type=\"fractalNoise\"\n          baseFrequency=\"0.02\"\n          numOctaves=\"1\"\n          result=\"noise\"\n        />\n        <feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"0.5\" />\n        <feGaussianBlur stdDeviation=\"0.2\" />\n      </filter>\n    </defs>\n  </svg>\n);\n\nexport {\n  SketchAccordion,\n  SketchAccordionItem,\n  SketchAccordionTrigger,\n  SketchAccordionContent,\n  PencilFilter,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}