{
  "name": "artistic-file-upload",
  "type": "registry:ui",
  "dependencies": [
    "react-dropzone",
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui-canvas/artistic-file-upload.tsx",
      "content": "\"use client\";\n\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { motion, AnimatePresence, useAnimation } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  FileIcon,\n  ImageIcon,\n  VideoIcon,\n  MusicIcon,\n  XIcon,\n  EyeIcon,\n  PaintBrushIcon,\n  TrashIcon,\n  SparklesIcon,\n} from \"lucide-react\";\n\ninterface FileWithPreview extends File {\n  preview?: string;\n  id: string;\n  color?: string;\n}\n\nconst colors = [\n  \"from-pink-500 to-rose-500\",\n  \"from-purple-500 to-indigo-500\",\n  \"from-blue-500 to-cyan-500\",\n  \"from-emerald-500 to-teal-500\",\n];\n\nconst fileTypes = [\n  { type: \"image/*\", icon: <ImageIcon className=\"h-5 w-5\" />, color: \"pink\" },\n  { type: \"video/*\", icon: <VideoIcon className=\"h-5 w-5\" />, color: \"purple\" },\n  { type: \"audio/*\", icon: <MusicIcon className=\"h-5 w-5\" />, color: \"blue\" },\n];\n\nconst paintSplashVariants = {\n  initial: { scale: 0, opacity: 0, rotate: -180 },\n  animate: (i: number) => ({\n    scale: [1, 1.2, 1],\n    opacity: [0.8, 1, 0.8],\n    rotate: [180, 360, 180],\n    transition: {\n      duration: 2,\n      delay: i * 0.2,\n      repeat: Infinity,\n      repeatType: \"reverse\",\n    },\n  }),\n};\n\nconst fileCardVariants = {\n  initial: { opacity: 0, scale: 0.8, y: 20, rotateX: -30 },\n  animate: {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    rotateX: 0,\n    transition: {\n      type: \"spring\",\n      stiffness: 300,\n      damping: 20,\n    }\n  },\n  hover: {\n    scale: 1.05,\n    rotateY: 5,\n    boxShadow: \"0 20px 40px rgba(0,0,0,0.2)\",\n    transition: { duration: 0.3 }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.5,\n    rotateX: 45,\n    transition: { duration: 0.3 }\n  }\n};\n\nexport function ArtisticFileUpload() {\n  const [files, setFiles] = useState<FileWithPreview[]>([]);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isDraggingFile, setIsDraggingFile] = useState(false);\n  const [activeFilters, setActiveFilters] = useState<string[]>([]);\n  const [previewMode, setPreviewMode] = useState(false);\n  const [selectedFile, setSelectedFile] = useState<FileWithPreview | null>(null);\n  const controls = useAnimation();\n\n  useEffect(() => {\n    controls.start({\n      background: [\n        \"linear-gradient(45deg, #ff6b6b, #4ecdc4)\",\n        \"linear-gradient(45deg, #a8e6cf, #ff8b94)\",\n        \"linear-gradient(45deg, #3498db, #2ecc71)\",\n      ],\n      transition: {\n        duration: 10,\n        repeat: Infinity,\n        repeatType: \"reverse\",\n      },\n    });\n  }, [controls]);\n\n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    const newFiles = acceptedFiles.map((file) =>\n      Object.assign(file, {\n        preview: URL.createObjectURL(file),\n        id: Math.random().toString(36).substring(7),\n        color: colors[Math.floor(Math.random() * colors.length)],\n      }),\n    );\n    setFiles((prev) => [...prev, ...newFiles]);\n\n    let progress = 0;\n    const interval = setInterval(() => {\n      progress += (100 - progress) * 0.1;\n      setUploadProgress(Math.min(Math.round(progress), 100));\n      if (progress >= 99.5) clearInterval(interval);\n    }, 100);\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: true,\n    accept: activeFilters.length ? Object.fromEntries(activeFilters.map(type => [type, []])) : undefined,\n    onDragEnter: () => setIsDraggingFile(true),\n    onDragLeave: () => setIsDraggingFile(false),\n    onDropAccepted: () => setIsDraggingFile(false),\n  });\n\n  const getFileIcon = (type: string) => {\n    if (type.includes(\"image\"))\n      return <ImageIcon className=\"h-6 w-6\" />;\n    if (type.includes(\"video\"))\n      return <VideoIcon className=\"h-6 w-6\" />;\n    if (type.includes(\"audio\"))\n      return <MusicIcon className=\"h-6 w-6\" />;\n    return <FileIcon className=\"h-6 w-6\" />;\n  };\n\n  const removeFile = (fileId: string) => {\n    setFiles((prev) => prev.filter((f) => f.id !== fileId));\n  };\n\n  const toggleFilter = (type: string) => {\n    setActiveFilters((prev) =>\n      prev.includes(type) ? prev.filter((t) => t !== type) : [...prev, type]\n    );\n  };\n\n  const filteredFiles = files.filter((file) =>\n    activeFilters.length === 0 || activeFilters.some((type) => file.type.includes(type.split(\"/\")[0]))\n  );\n\n  return (\n    <div className=\"mx-auto w-full max-w-4xl\">\n      {/* Artistic Controls */}\n      <motion.div\n        className=\"mb-6 flex items-center justify-between rounded-2xl bg-gradient-to-r from-gray-900 to-gray-800 p-4 shadow-xl\"\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"flex gap-3\">\n          {fileTypes.map(({ type, icon, color }) => (\n            <motion.button\n              key={type}\n              onClick={() => toggleFilter(type)}\n              className={cn(\n                \"group relative flex items-center gap-2 overflow-hidden rounded-xl px-4 py-2\",\n                \"transition-all duration-300\",\n                activeFilters.includes(type)\n                  ? `from- bg-gradient-to-r${color}-500 to-${color}-600 text-white shadow-lg`\n                  : \"bg-gray-800 text-gray-400 hover:text-white\"\n              )}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <motion.div\n                className=\"absolute inset-0 bg-gradient-to-r from-white/20 to-transparent opacity-0 group-hover:opacity-100\"\n                initial={false}\n                transition={{ duration: 0.3 }}\n              />\n              {icon}\n              <span className=\"text-sm font-medium\">{type.split(\"/\")[0]}</span>\n            </motion.button>\n          ))}\n        </div>\n        <div className=\"flex gap-3\">\n          <motion.button\n            onClick={() => setPreviewMode(!previewMode)}\n            className={cn(\n              \"flex items-center gap-2 rounded-xl px-4 py-2 transition-all\",\n              previewMode\n                ? \"bg-gradient-to-r from-purple-500 to-pink-500 text-white\"\n                : \"bg-gray-800 text-gray-400 hover:text-white\"\n            )}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <EyeIcon className=\"h-5 w-5\" />\n            <span className=\"text-sm font-medium\">Preview</span>\n          </motion.button>\n          {files.length > 0 && (\n            <motion.button\n              onClick={() => setFiles([])}\n              className=\"group flex items-center gap-2 rounded-xl bg-red-500/20 px-4 py-2 text-red-400 transition-all hover:bg-red-500 hover:text-white\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <TrashIcon className=\"h-5 w-5\" />\n              <span className=\"text-sm font-medium\">Clear</span>\n            </motion.button>\n          )}\n        </div>\n      </motion.div>\n\n      {/* Drop Zone */}\n      <motion.div\n        {...getRootProps()}\n        className={cn(\n          \"relative min-h-[400px] overflow-hidden rounded-3xl p-8\",\n          \"bg-gradient-to-br from-gray-900 to-gray-800\",\n          \"transition-all duration-300 ease-out\",\n          isDragActive && \"ring-4 ring-primary ring-offset-4 ring-offset-background\",\n        )}\n        animate={controls}\n        initial={{ opacity: 0, scale: 0.95 }}\n        whileHover={{ scale: 1.01 }}\n        transition={{ duration: 0.3 }}\n      >\n        <div className=\"absolute inset-0 backdrop-blur-3xl\" />\n        <input {...getInputProps()} />\n\n        <AnimatePresence>\n          {isDragActive && (\n            <motion.div\n              className=\"pointer-events-none absolute inset-0 overflow-hidden\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n            >\n              {[...Array(8)].map((_, i) => (\n                <motion.div\n                  key={i}\n                  className=\"absolute rounded-full bg-gradient-to-br from-white/30 to-white/10 backdrop-blur-md\"\n                  style={{\n                    width: `${Math.random() * 100 + 50}px`,\n                    height: `${Math.random() * 100 + 50}px`,\n                    left: `${Math.random() * 100}%`,\n                    top: `${Math.random() * 100}%`,\n                  }}\n                  variants={paintSplashVariants}\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  custom={i}\n                />\n              ))}\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        <motion.div\n          className=\"relative z-10 flex flex-col items-center justify-center gap-6 text-center\"\n          animate={{\n            scale: isDragActive ? 1.1 : 1,\n            y: isDragActive ? -20 : 0,\n          }}\n        >\n          <motion.div\n            className=\"rounded-full bg-white/10 p-6\"\n            whileHover={{ rotate: 360 }}\n            transition={{ duration: 1, type: \"spring\" }}\n          >\n            <PaintBrushIcon className=\"h-12 w-12 text-white\" />\n          </motion.div>\n          <div>\n            <motion.h3\n              className=\"bg-gradient-to-r from-white to-gray-300 bg-clip-text text-2xl font-bold text-transparent\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.2 }}\n            >\n              {activeFilters.length\n                ? `Drop ${activeFilters.map((t) => t.split(\"/\")[0]).join(\" or \")} files`\n                : \"Paint your canvas with files\"}\n            </motion.h3>\n            <motion.p\n              className=\"mt-2 text-gray-400\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 }}\n            >\n              {activeFilters.length\n                ? \"Filtered upload mode active\"\n                : \"Drag & drop or click to select\"}\n            </motion.p>\n          </div>\n\n          {uploadProgress > 0 && uploadProgress < 100 && (\n            <motion.div\n              className=\"relative w-full max-w-md\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n            >\n              <div className=\"h-2 overflow-hidden rounded-full bg-gray-800\">\n                <motion.div\n                  className=\"h-full rounded-full bg-gradient-to-r from-primary via-purple-500 to-pink-500\"\n                  style={{\n                    backgroundSize: \"200% 100%\",\n                  }}\n                  initial={{ width: 0, backgroundPosition: \"0% 50%\" }}\n                  animate={{\n                    width: `${uploadProgress}%`,\n                    backgroundPosition: [\"0% 50%\", \"100% 50%\"],\n                  }}\n                  transition={{\n                    width: { type: \"spring\", damping: 15 },\n                    backgroundPosition: { duration: 1, repeat: Infinity, repeatType: \"reverse\" }\n                  }}\n                />\n              </div>\n              <motion.div\n                className=\"absolute -top-6 text-sm font-medium text-primary\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                style={{ left: `${uploadProgress}%` }}\n              >\n                {uploadProgress}%\n              </motion.div>\n            </motion.div>\n          )}\n        </motion.div>\n\n        {/* File Gallery */}\n        {filteredFiles.length > 0 && (\n          <motion.div\n            className=\"relative z-10 mt-12 grid grid-cols-3 gap-6\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n          >\n            <AnimatePresence mode=\"popLayout\">\n              {filteredFiles.map((file) => (\n                <motion.div\n                  key={file.id}\n                  className={cn(\n                    \"group relative overflow-hidden rounded-2xl p-4\",\n                    \"bg-gradient-to-br from-gray-800/80 to-gray-900/80 backdrop-blur-xl\",\n                    previewMode && file.type.includes(\"image\") ? \"cursor-pointer\" : \"\"\n                  )}\n                  variants={fileCardVariants}\n                  initial=\"initial\"\n                  animate=\"animate\"\n                  exit=\"exit\"\n                  whileHover=\"hover\"\n                  onClick={() => {\n                    if (previewMode && file.type.includes(\"image\")) {\n                      setSelectedFile(file);\n                    }\n                  }}\n                >\n                  <motion.div\n                    className=\"absolute inset-0 bg-gradient-to-br opacity-0 transition-opacity group-hover:opacity-100\"\n                    style={{\n                      background: `linear-gradient(to bottom right, ${file.color || colors[0]})`,\n                    }}\n                  />\n                  <div className=\"relative z-10 flex items-center gap-3\">\n                    <motion.div\n                      className=\"rounded-xl bg-white/10 p-3\"\n                      whileHover={{ rotate: 360 }}\n                      transition={{ duration: 0.5 }}\n                    >\n                      {getFileIcon(file.type)}\n                    </motion.div>\n                    <span className=\"flex-1 truncate text-sm font-medium text-white\">\n                      {file.name}\n                    </span>\n                    <motion.button\n                      className=\"rounded-full bg-white/10 p-2 opacity-0 transition-opacity group-hover:opacity-100\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        removeFile(file.id);\n                      }}\n                      whileHover={{ scale: 1.1 }}\n                      whileTap={{ scale: 0.9 }}\n                    >\n                      <XIcon className=\"h-4 w-4 text-white\" />\n                    </motion.button>\n                  </div>\n                  {previewMode && file.type.includes(\"image\") && file.preview && (\n                    <motion.div\n                      className=\"mt-3 overflow-hidden rounded-xl\"\n                      initial={{ opacity: 0, height: 0 }}\n                      animate={{ opacity: 1, height: \"auto\" }}\n                    >\n                      <img\n                        src={file.preview}\n                        alt={file.name}\n                        className=\"h-32 w-full object-cover\"\n                      />\n                    </motion.div>\n                  )}\n                  <motion.div\n                    className=\"absolute bottom-0 left-0 h-1 bg-gradient-to-r\"\n                    style={{\n                      backgroundImage: `linear-gradient(to right, ${file.color || colors[0]})`,\n                      width: \"100%\",\n                    }}\n                  />\n                </motion.div>\n              ))}\n            </AnimatePresence>\n          </motion.div>\n        )}\n      </motion.div>\n\n      {/* Preview Modal */}\n      <AnimatePresence>\n        {selectedFile && (\n          <motion.div\n            className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/80 backdrop-blur-xl\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={() => setSelectedFile(null)}\n          >\n            <motion.div\n              className=\"relative max-h-[90vh] max-w-[90vw] overflow-hidden rounded-3xl bg-gradient-to-br from-gray-900 to-gray-800 p-6\"\n              initial={{ scale: 0.9, opacity: 0, rotateX: -20 }}\n              animate={{ scale: 1, opacity: 1, rotateX: 0 }}\n              exit={{ scale: 0.9, opacity: 0, rotateX: 20 }}\n              transition={{ type: \"spring\", damping: 20 }}\n            >\n              <img\n                src={selectedFile.preview}\n                alt={selectedFile.name}\n                className=\"max-h-[80vh] rounded-2xl object-contain\"\n              />\n              <motion.button\n                className=\"absolute -right-3 -top-3 rounded-full bg-white/10 p-2 backdrop-blur-md\"\n                onClick={() => setSelectedFile(null)}\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n              >\n                <XIcon className=\"h-5 w-5 text-white\" />\n              </motion.button>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}