{
  "name": "canvas-slider",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slider",
    "framer-motion"
  ],
  "files": [
    {
      "path": "ui-canvas/canvas-slider.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as SliderPrimitive from \"@radix-ui/react-slider\";\nimport { cn } from \"@/lib/utils\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useTheme } from \"next-themes\";\n\ninterface CanvasSliderProps\n  extends React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root> {\n  className?: string;\n  primaryColor?: string;\n  secondaryColor?: string;\n  variant?:\n    | \"default\"\n    | \"watercolor\"\n    | \"neon\"\n    | \"glass\"\n    | \"metallic\"\n    | \"gradient\";\n}\n\nconst defaultColors = {\n  light: {\n    default: {\n      primary: \"#000000\",\n      secondary: \"#666666\",\n    },\n    neon: {\n      primary: \"#FF0080\",\n      secondary: \"#7928CA\",\n    },\n    glass: {\n      primary: \"#0EA5E9\",\n      secondary: \"#6366F1\",\n    },\n    metallic: {\n      primary: \"#94A3B8\",\n      secondary: \"#E2E8F0\",\n    },\n    gradient: {\n      primary: \"#F97316\",\n      secondary: \"#FBBF24\",\n    },\n    watercolor: {\n      primary: \"#4F46E5\",\n      secondary: \"#06B6D4\",\n    },\n  },\n  dark: {\n    default: {\n      primary: \"#FFFFFF\",\n      secondary: \"#999999\",\n    },\n    neon: {\n      primary: \"#FF0080\",\n      secondary: \"#7928CA\",\n    },\n    glass: {\n      primary: \"#38BDF8\",\n      secondary: \"#818CF8\",\n    },\n    metallic: {\n      primary: \"#CBD5E1\",\n      secondary: \"#F1F5F9\",\n    },\n    gradient: {\n      primary: \"#FB923C\",\n      secondary: \"#FDE68A\",\n    },\n    watercolor: {\n      primary: \"#818CF8\",\n      secondary: \"#22D3EE\",\n    },\n  },\n};\n\nconst CanvasSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  CanvasSliderProps\n>(\n  (\n    {\n      className,\n      primaryColor,\n      secondaryColor,\n      variant = \"watercolor\",\n      ...props\n    },\n    ref,\n  ) => {\n    const { theme = \"light\" } = useTheme();\n    const [isHovered, setIsHovered] = React.useState(false);\n    const [rippleKey, setRippleKey] = React.useState(0);\n\n    const handleValueChange = () => {\n      setRippleKey((prev) => prev + 1);\n    };\n\n    const colors = defaultColors[theme as keyof typeof defaultColors];\n    const variantColors = colors[variant as keyof typeof colors];\n    const primary = primaryColor || variantColors.primary;\n    const secondary = secondaryColor || variantColors.secondary;\n\n    const getTrackStyles = () => {\n      const baseStyle = {\n        transition: \"all 0.3s ease\",\n      };\n\n      switch (variant) {\n        case \"neon\":\n          return {\n            ...baseStyle,\n            background: `linear-gradient(90deg, \n              ${primary} 0%, \n              ${secondary} 100%\n            )`,\n            boxShadow: `0 0 10px ${primary}, 0 0 20px ${secondary}`,\n            border:\n              theme === \"dark\"\n                ? \"1px solid rgba(255, 255, 255, 0.2)\"\n                : \"1px solid rgba(0, 0, 0, 0.1)\",\n          };\n        case \"glass\":\n          return {\n            ...baseStyle,\n            background: `linear-gradient(90deg,\n              ${primary}40 0%,\n              ${secondary}40 100%\n            )`,\n            backdropFilter: \"blur(8px)\",\n            border:\n              theme === \"dark\"\n                ? \"1px solid rgba(255, 255, 255, 0.2)\"\n                : \"1px solid rgba(0, 0, 0, 0.1)\",\n          };\n        case \"metallic\":\n          return {\n            ...baseStyle,\n            background: `linear-gradient(90deg,\n              ${primary} 0%,\n              ${secondary} 50%,\n              ${primary} 100%\n            )`,\n            border:\n              theme === \"dark\"\n                ? \"1px solid rgba(255, 255, 255, 0.3)\"\n                : \"1px solid rgba(0, 0, 0, 0.2)\",\n          };\n        case \"gradient\":\n          return {\n            ...baseStyle,\n            background: `linear-gradient(90deg,\n              ${primary} 0%,\n              ${secondary} 100%\n            )`,\n            border: \"none\",\n          };\n        case \"watercolor\":\n          return {\n            ...baseStyle,\n            background: `linear-gradient(90deg, \n              ${primary}80 0%, \n              ${secondary}80 100%\n            )`,\n            filter: \"url(#watercolor)\",\n          };\n        default:\n          return {\n            ...baseStyle,\n            background: `linear-gradient(90deg, \n              ${primary} 0%, \n              ${secondary} 100%\n            )`,\n          };\n      }\n    };\n\n    const getThumbStyles = () => {\n      const baseStyle = {\n        transition: \"all 0.3s ease\",\n      };\n\n      switch (variant) {\n        case \"neon\":\n          return {\n            ...baseStyle,\n            background: primary,\n            boxShadow: `0 0 10px ${primary}, 0 0 20px ${primary}`,\n            border:\n              theme === \"dark\"\n                ? \"1px solid rgba(255, 255, 255, 0.3)\"\n                : \"1px solid rgba(0, 0, 0, 0.2)\",\n          };\n        case \"glass\":\n          return {\n            ...baseStyle,\n            background: `${primary}40`,\n            backdropFilter: \"blur(8px)\",\n            border:\n              theme === \"dark\"\n                ? \"1px solid rgba(255, 255, 255, 0.3)\"\n                : \"1px solid rgba(0, 0, 0, 0.2)\",\n          };\n        case \"metallic\":\n          return {\n            ...baseStyle,\n            background: `linear-gradient(135deg, ${primary}, ${secondary})`,\n            border:\n              theme === \"dark\"\n                ? \"1px solid rgba(255, 255, 255, 0.3)\"\n                : \"1px solid rgba(0, 0, 0, 0.2)\",\n          };\n        case \"gradient\":\n          return {\n            ...baseStyle,\n            background: primary,\n          };\n        case \"watercolor\":\n          return {\n            ...baseStyle,\n            background: primary,\n            filter: \"url(#watercolor)\",\n          };\n        default:\n          return {\n            ...baseStyle,\n            background: primary,\n          };\n      }\n    };\n\n    return (\n      <SliderPrimitive.Root\n        ref={ref}\n        className={cn(\n          \"relative flex w-full touch-none select-none items-center\",\n          className,\n        )}\n        onValueChange={handleValueChange}\n        {...props}\n      >\n        <SliderPrimitive.Track className=\"relative h-3 w-full grow overflow-hidden rounded-full\">\n          <div\n            className=\"absolute h-full w-full transition-all duration-300\"\n            style={getTrackStyles()}\n          />\n          <SliderPrimitive.Range className=\"absolute h-full bg-transparent\" />\n        </SliderPrimitive.Track>\n        <SliderPrimitive.Thumb\n          className=\"relative block h-6 w-6 rounded-full transition-all duration-300\"\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n        >\n          <motion.div\n            className=\"absolute inset-0 z-10 rounded-full\"\n            style={getThumbStyles()}\n            animate={{\n              scale: isHovered ? 1.2 : 1,\n            }}\n          />\n          <AnimatePresence>\n            {variant === \"watercolor\" && rippleKey && (\n              <motion.div\n                key={rippleKey}\n                className=\"absolute -z-10\"\n                style={{\n                  top: \"-100%\",\n                  left: \"-100%\",\n                  width: \"300%\",\n                  height: \"300%\",\n                  borderRadius: \"50%\",\n                  background: `${primary}40`,\n                  pointerEvents: \"none\",\n                }}\n                initial={{ scale: 1, opacity: 0.8 }}\n                animate={{ scale: 2, opacity: 0 }}\n                exit={{ opacity: 0 }}\n                transition={{ duration: 0.5 }}\n              />\n            )}\n          </AnimatePresence>\n        </SliderPrimitive.Thumb>\n\n        {variant === \"watercolor\" && (\n          <svg width=\"0\" height=\"0\">\n            <filter id=\"watercolor\">\n              <feTurbulence\n                type=\"fractalNoise\"\n                baseFrequency=\"0.015\"\n                numOctaves=\"3\"\n                seed=\"1\"\n              />\n              <feDisplacementMap in=\"SourceGraphic\" scale=\"10\" />\n              <feGaussianBlur stdDeviation=\"1\" />\n            </filter>\n          </svg>\n        )}\n      </SliderPrimitive.Root>\n    );\n  },\n);\nCanvasSlider.displayName = \"CanvasSlider\";\n\nexport { CanvasSlider };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}