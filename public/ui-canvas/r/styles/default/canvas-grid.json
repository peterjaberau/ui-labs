{
  "name": "canvas-grid",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui-canvas/canvas-grid.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { motion } from \"framer-motion\";\n\ninterface CanvasGridItem {\n  id: string;\n  content: React.ReactNode;\n  width?: number;\n  height?: number;\n}\n\ninterface CanvasGridProps {\n  items: CanvasGridItem[];\n  className?: string;\n  columns?: number;\n  gap?: number;\n}\n\nexport default function CanvasGrid({\n  items,\n  className,\n  columns = 3,\n  gap = 20,\n}: CanvasGridProps) {\n  return (\n    <div\n      className={cn(\"grid auto-rows-[minmax(180px,auto)] gap-4\", className)}\n      style={{\n        gridTemplateColumns: `repeat(${columns}, minmax(0, 1fr))`,\n        gap: `${gap}px`,\n      }}\n    >\n      {items.map((item) => (\n        <motion.div\n          key={item.id}\n          className=\"group relative overflow-hidden rounded-lg bg-white p-2 shadow-md transition-shadow hover:shadow-lg dark:bg-zinc-900\"\n          style={{\n            gridColumn: `span ${Math.min(item.width || 1, columns)}`,\n            gridRow: `span ${item.height || 1}`,\n          }}\n          whileHover={{\n            scale: 1.02,\n            rotate: [-1, 1, 0],\n            transition: { duration: 0.3 },\n          }}\n        >\n          <div className=\"absolute inset-0 bg-gradient-to-b from-black/5 to-transparent opacity-0 transition-opacity group-hover:opacity-100 dark:from-white/5\" />\n          <div className=\"relative h-full\">{item.content}</div>\n          <div className=\"absolute inset-x-0 bottom-0 h-8 bg-gradient-to-t from-black/10 to-transparent opacity-0 transition-opacity group-hover:opacity-100 dark:from-white/10\" />\n        </motion.div>\n      ))}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}