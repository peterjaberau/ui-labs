{
  "name": "layer-manager",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui-canvas/layer-manager.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  EyeIcon,\n  EyeOffIcon,\n  LockIcon,\n  UnlockIcon,\n  Trash2Icon,\n  MoveUpIcon,\n  MoveDownIcon,\n  LayersIcon,\n} from \"lucide-react\";\nimport Image from \"next/image\";\n\nexport interface Layer {\n  id: string;\n  name: string;\n  visible: boolean;\n  locked: boolean;\n  thumbnail?: string;\n}\n\nexport interface LayerManagerProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  layers: Layer[];\n  selectedLayerId?: string;\n  onLayerSelect?: (id: string) => void;\n  onLayerVisibilityToggle?: (id: string) => void;\n  onLayerLockToggle?: (id: string) => void;\n  onLayerDelete?: (id: string) => void;\n  onLayerMove?: (id: string, direction: \"up\" | \"down\") => void;\n  onLayerRename?: (id: string, newName: string) => void;\n}\n\nexport default function LayerManager({\n  layers,\n  selectedLayerId,\n  onLayerSelect,\n  onLayerVisibilityToggle,\n  onLayerLockToggle,\n  onLayerDelete,\n  onLayerMove,\n  onLayerRename,\n  className,\n  ...props\n}: LayerManagerProps) {\n  return (\n    <div\n      className={cn(\n        \"flex flex-col rounded-xl border bg-background/95 shadow-lg backdrop-blur supports-[backdrop-filter]:bg-background/80\",\n        \"dark:bg-black/90 dark:supports-[backdrop-filter]:bg-black/80\",\n        className,\n      )}\n      {...props}\n    >\n      <div className=\"flex items-center gap-2 border-b border-border/50 px-4 py-3 dark:border-white/10\">\n        <LayersIcon className=\"h-4 w-4 text-foreground/70 dark:text-white/70\" />\n        <span className=\"text-sm font-medium text-foreground/90 dark:text-white/90\">\n          Layers\n        </span>\n      </div>\n      <div className=\"flex flex-col p-1\">\n        {layers.map((layer) => (\n          <div\n            key={layer.id}\n            className={cn(\n              \"group flex cursor-pointer items-center gap-3 rounded-lg px-3 py-2 transition-all\",\n              \"hover:bg-accent/5 dark:hover:bg-white/5\",\n              selectedLayerId === layer.id && \"bg-accent/10 dark:bg-white/10\",\n            )}\n            onClick={() => onLayerSelect?.(layer.id)}\n          >\n            <div className=\"flex flex-1 items-center gap-3 overflow-hidden\">\n              {layer.thumbnail ? (\n                <div className=\"relative h-8 w-8 shrink-0 overflow-hidden rounded-md border border-border/50 bg-muted/50 dark:border-white/10 dark:bg-white/5\">\n                  <Image\n                    src={layer.thumbnail}\n                    alt={layer.name}\n                    fill\n                    className=\"object-cover\"\n                  />\n                </div>\n              ) : (\n                <div className=\"flex h-8 w-8 shrink-0 items-center justify-center rounded-md border border-border/50 bg-muted/50 dark:border-white/10 dark:bg-white/5\">\n                  <LayersIcon className=\"h-4 w-4 text-muted-foreground dark:text-white/50\" />\n                </div>\n              )}\n\n              <input\n                type=\"text\"\n                value={layer.name}\n                className=\"h-7 w-full rounded bg-transparent px-1 text-sm text-foreground/90 focus:outline-none focus:ring-1 focus:ring-ring dark:text-white/90 dark:focus:ring-white/20\"\n                onChange={(e) => onLayerRename?.(layer.id, e.target.value)}\n              />\n            </div>\n\n            <div className=\"flex items-center gap-0.5\">\n              <button\n                className={cn(\n                  \"rounded-md p-2 transition-colors\",\n                  \"text-muted-foreground hover:text-foreground dark:text-white/50 dark:hover:text-white\",\n                  !layer.visible &&\n                    \"text-muted-foreground/50 dark:text-white/25\",\n                )}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onLayerVisibilityToggle?.(layer.id);\n                }}\n                title={layer.visible ? \"Hide layer\" : \"Show layer\"}\n              >\n                {layer.visible ? (\n                  <EyeIcon className=\"h-3.5 w-3.5\" />\n                ) : (\n                  <EyeOffIcon className=\"h-3.5 w-3.5\" />\n                )}\n              </button>\n\n              <button\n                className={cn(\n                  \"rounded-md p-2 transition-colors\",\n                  \"text-muted-foreground hover:text-foreground dark:text-white/50 dark:hover:text-white\",\n                  layer.locked && \"text-foreground dark:text-white\",\n                )}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onLayerLockToggle?.(layer.id);\n                }}\n                title={layer.locked ? \"Unlock layer\" : \"Lock layer\"}\n              >\n                {layer.locked ? (\n                  <LockIcon className=\"h-3.5 w-3.5\" />\n                ) : (\n                  <UnlockIcon className=\"h-3.5 w-3.5\" />\n                )}\n              </button>\n\n              <button\n                className=\"rounded-md p-2 text-muted-foreground transition-colors hover:text-foreground dark:text-white/50 dark:hover:text-white\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onLayerMove?.(layer.id, \"up\");\n                }}\n                title=\"Move layer up\"\n              >\n                <MoveUpIcon className=\"h-3.5 w-3.5\" />\n              </button>\n\n              <button\n                className=\"rounded-md p-2 text-muted-foreground transition-colors hover:text-foreground dark:text-white/50 dark:hover:text-white\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onLayerMove?.(layer.id, \"down\");\n                }}\n                title=\"Move layer down\"\n              >\n                <MoveDownIcon className=\"h-3.5 w-3.5\" />\n              </button>\n\n              <button\n                className=\"rounded-md p-2 text-muted-foreground transition-colors hover:text-red-500 dark:text-white/50 dark:hover:text-red-400\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onLayerDelete?.(layer.id);\n                }}\n                title=\"Delete layer\"\n              >\n                <Trash2Icon className=\"h-3.5 w-3.5\" />\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}