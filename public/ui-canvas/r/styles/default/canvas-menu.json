{
  "name": "canvas-menu",
  "type": "registry:ui",
  "registryDependencies": [
    "@radix-ui/react-menu"
  ],
  "files": [
    {
      "path": "ui-canvas/canvas-menu.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Root,\n  Trigger,\n  Menu,\n  Group,\n  Portal,\n  Sub,\n  RadioGroup,\n  SubTrigger,\n  SubContent,\n  Content,\n  Item,\n  CheckboxItem,\n  RadioItem,\n  Label,\n  Separator,\n  ItemIndicator,\n  Arrow,\n} from \"@radix-ui/react-menubar\";\nimport { cn } from \"@/lib/utils\";\n\nconst CanvasMenu = Root;\nconst CanvasMenuMenu = Menu;\nconst CanvasMenuTrigger = Trigger;\nconst CanvasMenuGroup = Group;\nconst CanvasMenuPortal = Portal;\nconst CanvasMenuSub = Sub;\nconst CanvasMenuRadioGroup = RadioGroup;\nconst CanvasMenuArrow = Arrow;\n\nconst CanvasMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof SubTrigger>\n>(({ className, children, ...props }, ref) => (\n  <SubTrigger\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-pointer select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none\",\n      \"before:absolute before:inset-0 before:z-0 before:bg-[url('/canvas-texture.png')] before:opacity-50 before:content-['']\",\n      \"after:absolute after:bottom-0 after:left-0 after:h-0 after:w-1 after:bg-gradient-to-b after:from-amber-500/50 after:to-transparent after:transition-[height] after:content-['']\",\n      \"hover:after:bottom-auto hover:after:top-0 hover:after:h-full\",\n      \"data-[state=open]:bg-neutral-100 dark:data-[state=open]:bg-neutral-800\",\n      \"hover:bg-neutral-50 dark:hover:bg-neutral-900\",\n      \"data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <svg\n      className=\"ml-auto h-4 w-4 stroke-current\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      style={{\n        position: \"relative\",\n        zIndex: 1,\n      }}\n    >\n      <path\n        d=\"M8.5 5.5L15.5 12L8.5 18.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  </SubTrigger>\n));\nCanvasMenuSubTrigger.displayName = SubTrigger.displayName;\n\nconst CanvasMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof SubContent>,\n  React.ComponentPropsWithoutRef<typeof SubContent>\n>(({ className, ...props }, ref) => (\n  <SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-neutral-200 bg-white p-1 shadow-lg\",\n      \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95\",\n      \"dark:border-neutral-800 dark:bg-neutral-950\",\n      className,\n    )}\n    {...props}\n  />\n));\nCanvasMenuSubContent.displayName = SubContent.displayName;\n\nconst CanvasMenuContent = React.forwardRef<\n  React.ElementRef<typeof Content>,\n  React.ComponentPropsWithoutRef<typeof Content>\n>(({ className, ...props }, ref) => (\n  <Portal>\n    <Content\n      ref={ref}\n      align=\"start\"\n      className={cn(\n        \"z-50 min-w-[12rem] overflow-hidden rounded-md border border-neutral-200 bg-white p-1 shadow-lg\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95\",\n        \"dark:border-neutral-800 dark:bg-neutral-950\",\n        className,\n      )}\n      {...props}\n    >\n      {props.children}\n      <CanvasMenuArrow className=\"fill-neutral-200 dark:fill-neutral-800\" />\n    </Content>\n  </Portal>\n));\nCanvasMenuContent.displayName = Content.displayName;\n\nconst CanvasMenuItem = React.forwardRef<\n  React.ElementRef<typeof Item>,\n  React.ComponentPropsWithoutRef<typeof Item>\n>(({ className, ...props }, ref) => (\n  <Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-pointer select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors\",\n      \"before:absolute before:inset-0 before:z-0 before:bg-[url('/canvas-texture.png')] before:opacity-50 before:content-['']\",\n      \"focus:bg-neutral-100 focus:text-neutral-900 dark:focus:bg-neutral-800 dark:focus:text-neutral-50\",\n      \"data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  />\n));\nCanvasMenuItem.displayName = Item.displayName;\n\nconst CanvasMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-pointer select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors\",\n      \"before:absolute before:inset-0 before:z-0 before:bg-[url('/canvas-texture.png')] before:opacity-50 before:content-['']\",\n      \"focus:bg-neutral-100 focus:text-neutral-900 dark:focus:bg-neutral-800 dark:focus:text-neutral-50\",\n      \"data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ItemIndicator>\n        <svg\n          className=\"h-4 w-4 stroke-current\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          style={{\n            position: \"relative\",\n            zIndex: 1,\n          }}\n        >\n          <path\n            d=\"M20 6L9 17L4 12\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      </ItemIndicator>\n    </span>\n    {children}\n  </CheckboxItem>\n));\nCanvasMenuCheckboxItem.displayName = CheckboxItem.displayName;\n\nconst CanvasMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof RadioItem>,\n  React.ComponentPropsWithoutRef<typeof RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-pointer select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors\",\n      \"before:absolute before:inset-0 before:z-0 before:bg-[url('/canvas-texture.png')] before:opacity-50 before:content-['']\",\n      \"focus:bg-neutral-100 focus:text-neutral-900 dark:focus:bg-neutral-800 dark:focus:text-neutral-50\",\n      \"data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ItemIndicator>\n        <svg\n          className=\"h-2 w-2 fill-current\"\n          viewBox=\"0 0 8 8\"\n          style={{\n            position: \"relative\",\n            zIndex: 1,\n          }}\n        >\n          <circle cx=\"4\" cy=\"4\" r=\"4\" />\n        </svg>\n      </ItemIndicator>\n    </span>\n    {children}\n  </RadioItem>\n));\nCanvasMenuRadioItem.displayName = RadioItem.displayName;\n\nconst CanvasMenuLabel = React.forwardRef<\n  React.ElementRef<typeof Label>,\n  React.ComponentPropsWithoutRef<typeof Label>\n>(({ className, ...props }, ref) => (\n  <Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n));\nCanvasMenuLabel.displayName = Label.displayName;\n\nconst CanvasMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentPropsWithoutRef<typeof Separator>\n>(({ className, ...props }, ref) => (\n  <Separator\n    ref={ref}\n    className={cn(\n      \"-mx-1 my-1 h-px bg-neutral-200 dark:bg-neutral-800\",\n      className,\n    )}\n    {...props}\n  />\n));\nCanvasMenuSeparator.displayName = Separator.displayName;\n\nconst PaintEffects = () => (\n  <svg width=\"0\" height=\"0\">\n    <defs>\n      <filter id=\"paint-stroke\">\n        <feTurbulence\n          type=\"fractalNoise\"\n          baseFrequency=\"0.01\"\n          numOctaves=\"3\"\n          result=\"noise\"\n        />\n        <feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"1\" />\n      </filter>\n      <filter id=\"paint-drip\">\n        <feTurbulence\n          type=\"fractalNoise\"\n          baseFrequency=\"0.03\"\n          numOctaves=\"2\"\n          result=\"noise\"\n        />\n        <feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"2\" />\n        <feGaussianBlur stdDeviation=\"0.3\" />\n      </filter>\n      <filter id=\"paint-dot\">\n        <feTurbulence\n          type=\"fractalNoise\"\n          baseFrequency=\"0.05\"\n          numOctaves=\"1\"\n          result=\"noise\"\n        />\n        <feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"0.5\" />\n      </filter>\n    </defs>\n  </svg>\n);\n\nexport {\n  CanvasMenu,\n  CanvasMenuMenu,\n  CanvasMenuTrigger,\n  CanvasMenuContent,\n  CanvasMenuItem,\n  CanvasMenuCheckboxItem,\n  CanvasMenuRadioItem,\n  CanvasMenuLabel,\n  CanvasMenuSeparator,\n  CanvasMenuGroup,\n  CanvasMenuPortal,\n  CanvasMenuSub,\n  CanvasMenuSubContent,\n  CanvasMenuSubTrigger,\n  CanvasMenuRadioGroup,\n  CanvasMenuArrow,\n  PaintEffects,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}