{
  "name": "canvas-drawer",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "ui-canvas/canvas-drawer.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { X } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface CanvasDrawerProps {\n  children: React.ReactNode;\n  open?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  side?: \"left\" | \"right\";\n  className?: string;\n  showHandle?: boolean;\n}\n\nexport function CanvasDrawer({\n  children,\n  open = false,\n  onOpenChange,\n  side = \"right\",\n  className,\n  showHandle = true,\n}: CanvasDrawerProps) {\n  const [isOpen, setIsOpen] = React.useState(open);\n\n  React.useEffect(() => {\n    setIsOpen(open);\n  }, [open]);\n\n  const handleToggle = () => {\n    const newState = !isOpen;\n    setIsOpen(newState);\n    onOpenChange?.(newState);\n  };\n\n  return (\n    <>\n      {showHandle && (\n        <motion.button\n          onClick={handleToggle}\n          className={cn(\n            \"group fixed top-1/2 z-50 -translate-y-1/2\",\n            side === \"left\" ? \"left-0\" : \"right-0\",\n          )}\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.95 }}\n        >\n          <div\n            className={cn(\n              \"relative flex h-24 w-8 items-center justify-center\",\n              \"rounded-full bg-gradient-to-b from-primary/20 to-primary/10\",\n              \"border border-primary/20 backdrop-blur-sm\",\n              \"dark:from-primary/30 dark:to-primary/20\",\n              \"transition-colors duration-200\",\n              \"group-hover:from-primary/30 group-hover:to-primary/20\",\n              \"dark:group-hover:from-primary/40 dark:group-hover:to-primary/30\",\n            )}\n          >\n            <motion.div\n              className=\"absolute inset-0 rounded-full bg-primary/5\"\n              initial={false}\n              animate={{\n                scale: [1, 1.2, 1],\n                opacity: [0.3, 0.2, 0.3],\n              }}\n              transition={{\n                duration: 3,\n                repeat: Infinity,\n                repeatType: \"reverse\",\n              }}\n            />\n            <div\n              className={cn(\n                \"h-1 w-4 rounded-full bg-primary/50\",\n                \"transition-transform duration-200\",\n                isOpen ? \"rotate-180\" : \"rotate-0\",\n                side === \"left\" ? \"-rotate-90\" : \"rotate-90\",\n              )}\n            />\n          </div>\n        </motion.button>\n      )}\n\n      <AnimatePresence>\n        {isOpen && (\n          <>\n            <motion.div\n              className=\"fixed inset-0 z-40 bg-black/20 backdrop-blur-sm\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              onClick={handleToggle}\n            />\n            <motion.div\n              className={cn(\n                \"fixed inset-y-0 z-50 w-80\",\n                \"bg-gradient-to-b from-background/95 to-background/80\",\n                \"border-primary/10 backdrop-blur-md\",\n                side === \"left\" ? \"left-0 border-r\" : \"right-0 border-l\",\n                \"overflow-y-auto\",\n                className,\n              )}\n              initial={{\n                x: side === \"left\" ? \"-100%\" : \"100%\",\n                opacity: 0,\n              }}\n              animate={{\n                x: 0,\n                opacity: 1,\n              }}\n              exit={{\n                x: side === \"left\" ? \"-100%\" : \"100%\",\n                opacity: 0,\n              }}\n              transition={{\n                type: \"spring\",\n                damping: 25,\n                stiffness: 200,\n              }}\n            >\n              <motion.button\n                onClick={handleToggle}\n                className={cn(\n                  \"group absolute right-4 top-4 z-20\",\n                  \"rounded-full p-2\",\n                  \"bg-primary/5 hover:bg-primary/10\",\n                  \"transition-colors duration-200\",\n                )}\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <motion.div\n                  className=\"absolute inset-0 rounded-full bg-primary/5\"\n                  initial={false}\n                  animate={{\n                    scale: [1, 1.2, 1],\n                    opacity: [0.3, 0.2, 0.3],\n                  }}\n                  transition={{\n                    duration: 3,\n                    repeat: Infinity,\n                    repeatType: \"reverse\",\n                  }}\n                />\n                <X className=\"h-4 w-4 text-primary/70\" />\n              </motion.button>\n              <div\n                className={cn(\n                  \"absolute inset-0\",\n                  \"bg-[url('/canvas-texture.png')] opacity-30\",\n                  \"pointer-events-none\",\n                )}\n              />\n              <div className=\"relative h-full p-6\">{children}</div>\n            </motion.div>\n          </>\n        )}\n      </AnimatePresence>\n    </>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}