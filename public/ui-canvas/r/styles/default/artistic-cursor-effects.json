{
  "name": "artistic-cursor-effects",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "ui-canvas/artistic-cursor-effects.tsx",
      "content": "\"use client\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { motion, useSpring, useMotionValue } from \"framer-motion\";\n\ninterface ArtisticCursorEffectsProps {\n  variant?: \"glow\" | \"trail\" | \"magnetic\";\n  color?: string;\n  size?: number;\n  trailLength?: number;\n  magneticStrength?: number;\n  glowIntensity?: number;\n  children?: React.ReactNode;\n}\n\nexport default function ArtisticCursorEffects({\n  variant = \"glow\",\n  color = \"#6366f1\",\n  size = 20,\n  trailLength = 8,\n  magneticStrength = 0.5,\n  glowIntensity = 1,\n  children,\n}: ArtisticCursorEffectsProps) {\n  const cursorRef = useRef<HTMLDivElement>(null);\n  const [cursorVisible, setCursorVisible] = useState(false);\n  const mouseX = useMotionValue(0);\n  const mouseY = useMotionValue(0);\n  const scale = useMotionValue(1);\n\n  const springConfig = { damping: 25, stiffness: 250 };\n  const springX = useSpring(mouseX, springConfig);\n  const springY = useSpring(mouseY, springConfig);\n  const springScale = useSpring(scale, { damping: 15, stiffness: 150 });\n\n  const [trails] = useState(() =>\n    Array.from({ length: trailLength }, (_, i) => ({\n      delay: i * 0.05,\n      opacity: 1 - i / trailLength,\n      scale: 1 - i * 0.05,\n    })),\n  );\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      const x = e.clientX - size / 2;\n      const y = e.clientY - size / 2;\n      mouseX.set(x);\n      mouseY.set(y);\n      setCursorVisible(true);\n    };\n\n    const handleMouseLeave = () => {\n      setCursorVisible(false);\n    };\n\n    const handleMouseDown = () => {\n      scale.set(0.9);\n    };\n\n    const handleMouseUp = () => {\n      scale.set(1);\n    };\n\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"mouseleave\", handleMouseLeave);\n    window.addEventListener(\"mousedown\", handleMouseDown);\n    window.addEventListener(\"mouseup\", handleMouseUp);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"mouseleave\", handleMouseLeave);\n      window.removeEventListener(\"mousedown\", handleMouseDown);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [mouseX, mouseY, scale, size]);\n\n  const renderCursorEffect = () => {\n    switch (variant) {\n      case \"trail\":\n        return (\n          <>\n            {trails.map((trail, index) => (\n              <motion.div\n                key={index}\n                className=\"pointer-events-none absolute rounded-full\"\n                style={{\n                  width: size,\n                  height: size,\n                  x: springX,\n                  y: springY,\n                  backgroundColor: color,\n                  opacity: trail.opacity,\n                  scale: springScale.get() * trail.scale,\n                }}\n              />\n            ))}\n            <motion.div\n              className=\"pointer-events-none absolute rounded-full border-2\"\n              style={{\n                width: size,\n                height: size,\n                x: springX,\n                y: springY,\n                borderColor: color,\n                scale: springScale,\n              }}\n              animate={{ rotate: 360 }}\n              transition={{ duration: 2, repeat: Infinity, ease: \"linear\" }}\n            />\n          </>\n        );\n\n      case \"magnetic\":\n        return (\n          <>\n            <motion.div\n              className=\"pointer-events-none absolute rounded-full\"\n              style={{\n                width: size * 3,\n                height: size * 3,\n                x: springX,\n                y: springY,\n                scale: springScale,\n              }}\n              animate={{\n                backgroundColor: `${color}10`,\n                scale: [1, 1.2, 1],\n                rotate: [0, 180, 360],\n              }}\n              transition={{\n                duration: 3,\n                ease: \"easeInOut\",\n                repeat: Infinity,\n                repeatType: \"reverse\",\n              }}\n            />\n            <motion.div\n              className=\"pointer-events-none absolute rounded-full\"\n              style={{\n                width: size * 2,\n                height: size * 2,\n                x: springX,\n                y: springY,\n                scale: springScale,\n              }}\n              animate={{\n                backgroundColor: `${color}20`,\n                scale: [1.1, 0.9, 1.1],\n                rotate: [180, 360, 540],\n              }}\n              transition={{\n                duration: 2,\n                ease: \"easeInOut\",\n                repeat: Infinity,\n                repeatType: \"reverse\",\n              }}\n            />\n            <motion.div\n              className=\"pointer-events-none absolute rounded-full\"\n              style={{\n                width: size,\n                height: size,\n                x: springX,\n                y: springY,\n                backgroundColor: color,\n                scale: springScale,\n              }}\n            />\n          </>\n        );\n\n      case \"glow\":\n      default:\n        return (\n          <>\n            <motion.div\n              className=\"pointer-events-none absolute rounded-full\"\n              style={{\n                width: size * 2,\n                height: size * 2,\n                x: springX,\n                y: springY,\n                scale: springScale,\n              }}\n              animate={{\n                backgroundColor: `${color}20`,\n                scale: [1, 1.5, 1],\n              }}\n              transition={{\n                duration: 2,\n                ease: \"easeInOut\",\n                repeat: Infinity,\n              }}\n            />\n            <motion.div\n              className=\"pointer-events-none absolute rounded-full\"\n              style={{\n                width: size,\n                height: size,\n                x: springX,\n                y: springY,\n                backgroundColor: color,\n                scale: springScale,\n              }}\n              animate={{\n                boxShadow: [\n                  `0 0 ${20 * glowIntensity}px ${10 * glowIntensity}px ${color}50`,\n                  `0 0 ${30 * glowIntensity}px ${15 * glowIntensity}px ${color}30`,\n                  `0 0 ${20 * glowIntensity}px ${10 * glowIntensity}px ${color}50`,\n                ],\n              }}\n              transition={{\n                duration: 1.5,\n                ease: \"easeInOut\",\n                repeat: Infinity,\n              }}\n            />\n          </>\n        );\n    }\n  };\n\n  return (\n    <div ref={cursorRef} className=\"relative\">\n      <motion.div\n        className=\"pointer-events-none fixed left-0 top-0 z-50 h-screen w-screen\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: cursorVisible ? 1 : 0 }}\n        transition={{ duration: 0.2 }}\n      >\n        {renderCursorEffect()}\n      </motion.div>\n      {children}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}