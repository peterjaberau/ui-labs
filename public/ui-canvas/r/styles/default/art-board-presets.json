{
  "name": "art-board-presets",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui-canvas/art-board-presets.tsx",
      "content": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Input } from \"@/components/ui/input\";\nimport { Search, Star, RotateCw, Plus } from \"lucide-react\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\ninterface PresetSize {\n  name: string;\n  width: number;\n  height: number;\n  category: string;\n}\n\nconst commonPresets: PresetSize[] = [\n  {\n    name: \"Instagram Post\",\n    width: 1080,\n    height: 1080,\n    category: \"Social Media\",\n  },\n  {\n    name: \"Instagram Story\",\n    width: 1080,\n    height: 1920,\n    category: \"Social Media\",\n  },\n  {\n    name: \"Instagram Reel\",\n    width: 1080,\n    height: 1920,\n    category: \"Social Media\",\n  },\n  { name: \"Twitter Post\", width: 1200, height: 675, category: \"Social Media\" },\n  { name: \"Facebook Post\", width: 1200, height: 630, category: \"Social Media\" },\n  { name: \"LinkedIn Post\", width: 1200, height: 627, category: \"Social Media\" },\n  { name: \"YouTube Thumbnail\", width: 1280, height: 720, category: \"Video\" },\n  { name: \"YouTube Banner\", width: 2560, height: 1440, category: \"Video\" },\n  { name: \"A4 Print\", width: 2480, height: 3508, category: \"Print\" },\n  { name: \"A3 Print\", width: 3508, height: 4961, category: \"Print\" },\n  { name: \"Business Card\", width: 1050, height: 600, category: \"Print\" },\n  { name: \"Desktop Wallpaper\", width: 1920, height: 1080, category: \"Screen\" },\n  { name: \"iPhone Wallpaper\", width: 1170, height: 2532, category: \"Screen\" },\n];\n\ninterface ArtBoardPresetsProps {\n  onSelectPreset?: (width: number, height: number) => void;\n}\n\nexport default function ArtBoardPresets({\n  onSelectPreset,\n}: ArtBoardPresetsProps) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"all\");\n  const [favorites, setFavorites] = useState<Set<string>>(new Set());\n  const [customWidth, setCustomWidth] = useState(\"\");\n  const [customHeight, setCustomHeight] = useState(\"\");\n\n  const categories = [\"all\", ...new Set(commonPresets.map((p) => p.category))];\n\n  const filteredPresets = commonPresets\n    .filter((preset) =>\n      preset.name.toLowerCase().includes(searchQuery.toLowerCase()),\n    )\n    .filter(\n      (preset) =>\n        selectedCategory === \"all\" || preset.category === selectedCategory,\n    )\n    .sort((a, b) => {\n      // Sort by favorites first\n      const aFav = favorites.has(a.name);\n      const bFav = favorites.has(b.name);\n      if (aFav !== bFav) return bFav ? 1 : -1;\n      return 0;\n    });\n\n  const toggleFavorite = (name: string) => {\n    const newFavorites = new Set(favorites);\n    if (newFavorites.has(name)) {\n      newFavorites.delete(name);\n    } else {\n      newFavorites.add(name);\n    }\n    setFavorites(newFavorites);\n  };\n\n  const handleCustomSize = () => {\n    const width = parseInt(customWidth);\n    const height = parseInt(customHeight);\n    if (width > 0 && height > 0) {\n      onSelectPreset?.(width, height);\n      setCustomWidth(\"\");\n      setCustomHeight(\"\");\n    }\n  };\n\n  const rotateSize = (width: number, height: number) => {\n    onSelectPreset?.(height, width);\n  };\n\n  return (\n    <Card className=\"w-full max-w-sm p-4\">\n      <h3 className=\"mb-4 text-lg font-semibold\">Art Board Presets</h3>\n\n      <div className=\"space-y-4\">\n        {/* Search and Category Filter */}\n        <div className=\"flex gap-2\">\n          <div className=\"relative flex-1\">\n            <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n            <Input\n              placeholder=\"Search presets...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"pl-8\"\n            />\n          </div>\n          <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n            <SelectTrigger className=\"w-[130px]\">\n              <SelectValue placeholder=\"Category\" />\n            </SelectTrigger>\n            <SelectContent>\n              {categories.map((category) => (\n                <SelectItem key={category} value={category}>\n                  {category.charAt(0).toUpperCase() + category.slice(1)}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* Custom Size Input */}\n        <div className=\"flex gap-2\">\n          <Input\n            type=\"number\"\n            placeholder=\"Width\"\n            value={customWidth}\n            onChange={(e) => setCustomWidth(e.target.value)}\n            className=\"flex-1\"\n          />\n          <Input\n            type=\"number\"\n            placeholder=\"Height\"\n            value={customHeight}\n            onChange={(e) => setCustomHeight(e.target.value)}\n            className=\"flex-1\"\n          />\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            onClick={handleCustomSize}\n            disabled={!customWidth || !customHeight}\n          >\n            <Plus className=\"h-4 w-4\" />\n          </Button>\n        </div>\n\n        {/* Presets List */}\n        <ScrollArea className=\"h-[400px] pr-4\">\n          <div className=\"space-y-2\">\n            {filteredPresets.map((preset) => (\n              <div key={preset.name} className=\"flex gap-2\">\n                <Button\n                  variant=\"outline\"\n                  className=\"flex-1 justify-between\"\n                  onClick={() => onSelectPreset?.(preset.width, preset.height)}\n                >\n                  <span>{preset.name}</span>\n                  <span className=\"text-muted-foreground\">\n                    {preset.width}Ã—{preset.height}\n                  </span>\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"icon\"\n                  onClick={() => rotateSize(preset.width, preset.height)}\n                >\n                  <RotateCw className=\"h-4 w-4\" />\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  onClick={() => toggleFavorite(preset.name)}\n                >\n                  <Star\n                    className={`h-4 w-4 ${\n                      favorites.has(preset.name)\n                        ? \"fill-yellow-400 text-yellow-400\"\n                        : \"text-muted-foreground\"\n                    }`}\n                  />\n                </Button>\n              </div>\n            ))}\n          </div>\n        </ScrollArea>\n      </div>\n    </Card>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}