{
  "name": "canvas-modal",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion",
    "@radix-ui/react-dialog",
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui-canvas/canvas-modal.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { cn } from \"@/lib/utils\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { X } from \"lucide-react\";\n\nconst CanvasModal = DialogPrimitive.Root;\n\nconst CanvasModalTrigger = DialogPrimitive.Trigger;\n\nconst CanvasModalPortal = DialogPrimitive.Portal;\n\nconst CanvasModalClose = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Close>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Close>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-6 top-6 rounded-full p-2.5\",\n      \"bg-primary/5 hover:bg-primary/10\",\n      \"shadow-sm hover:shadow-md\",\n      \"transition-all duration-200 ease-in-out\",\n      \"hover:scale-110 active:scale-95\",\n      \"focus:outline-none focus:ring-2 focus:ring-primary/20 focus:ring-offset-2\",\n      \"disabled:pointer-events-none\",\n      className,\n    )}\n    {...props}\n  >\n    <X className=\"h-4 w-4 transition-transform duration-200 ease-out hover:rotate-90\" />\n    <span className=\"sr-only\">Close</span>\n  </DialogPrimitive.Close>\n));\nCanvasModalClose.displayName = DialogPrimitive.Close.displayName;\n\nconst CanvasModalOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-gradient-to-br from-black/30 via-black/50 to-black/30 backdrop-blur-[2px] data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nCanvasModalOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst CanvasModalContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <CanvasModalPortal>\n    <CanvasModalOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 p-8 duration-300 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-2xl\",\n        \"bg-gradient-to-br from-background via-background/95 to-background/90 backdrop-blur-xl\",\n        \"shadow-[0_0_0_1px_rgba(0,0,0,0.05),0_2px_8px_rgba(0,0,0,0.1),0_4px_16px_rgba(0,0,0,0.1)]\",\n        \"border border-primary/10\",\n        \"before:absolute before:inset-0 before:-z-10 before:rounded-2xl before:bg-gradient-to-br before:from-primary/20 before:via-primary/10 before:to-primary/5 before:opacity-0 before:transition-opacity hover:before:opacity-100\",\n        \"after:absolute after:inset-0 after:-z-20 after:rounded-2xl after:bg-gradient-to-br after:from-primary/20 after:via-background after:to-background after:blur-xl\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <CanvasModalClose />\n    </DialogPrimitive.Content>\n  </CanvasModalPortal>\n));\nCanvasModalContent.displayName = DialogPrimitive.Content.displayName;\n\nconst CanvasModalHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      \"relative pb-4\",\n      \"after:absolute after:inset-x-0 after:bottom-0 after:h-px\",\n      \"after:bg-gradient-to-r after:from-primary/5 after:via-primary/10 after:to-primary/5\",\n      className,\n    )}\n    {...props}\n  />\n);\nCanvasModalHeader.displayName = \"CanvasModalHeader\";\n\nconst CanvasModalFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className,\n    )}\n    {...props}\n  />\n);\nCanvasModalFooter.displayName = \"CanvasModalFooter\";\n\nconst CanvasModalTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-xl font-semibold leading-none tracking-tight\",\n      \"bg-gradient-to-br from-foreground to-foreground/80 bg-clip-text text-transparent\",\n      className,\n    )}\n    {...props}\n  />\n));\nCanvasModalTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst CanvasModalDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\n      \"text-sm text-muted-foreground/90\",\n      \"leading-relaxed\",\n      className,\n    )}\n    {...props}\n  />\n));\nCanvasModalDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  CanvasModal,\n  CanvasModalPortal,\n  CanvasModalOverlay,\n  CanvasModalClose,\n  CanvasModalTrigger,\n  CanvasModalContent,\n  CanvasModalHeader,\n  CanvasModalFooter,\n  CanvasModalTitle,\n  CanvasModalDescription,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}