{
  "name": "sketch-input",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion",
    "class-variance-authority"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui-canvas/sketch-input.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { motion, MotionProps } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\nconst sketchInputVariants = cva(\n  \"relative w-full rounded-lg border bg-transparent px-4 py-2 text-base ring-offset-background transition-all duration-200 ease-in-out placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-input/20 bg-black/[0.02] shadow-sm backdrop-blur-sm hover:bg-black/[0.04] focus:border-input dark:bg-white/5 dark:hover:bg-white/10\",\n        brush:\n          \"border-input/20 bg-gradient-to-br from-black/[0.03] to-transparent shadow-sm backdrop-blur-sm hover:from-black/[0.05] hover:to-transparent focus:border-input dark:from-white/10 dark:to-transparent dark:hover:from-white/15\",\n        ink: \"border-input/20 bg-gradient-to-r from-black/[0.02] via-transparent to-black/[0.02] shadow-sm backdrop-blur-sm hover:from-black/[0.04] hover:via-transparent hover:to-black/[0.04] focus:border-input dark:from-white/5 dark:via-transparent dark:to-white/5 dark:hover:from-white/10 dark:hover:via-transparent dark:hover:to-white/10\",\n      },\n      state: {\n        default:\n          \"border-input/20 focus:border-primary focus:ring-1 focus:ring-primary/20\",\n        error:\n          \"border-destructive/50 focus:border-destructive focus:ring-1 focus:ring-destructive/20\",\n        success:\n          \"border-green-500/50 focus:border-green-500 focus:ring-1 focus:ring-green-500/20\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      state: \"default\",\n    },\n  },\n);\n\nexport interface SketchInputProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    VariantProps<typeof sketchInputVariants> {\n  inkFlow?: boolean;\n}\n\nconst SketchInput = React.forwardRef<\n  HTMLInputElement,\n  SketchInputProps & MotionProps\n>(({ className, variant, state, inkFlow, ...props }, ref) => {\n  const [isFocused, setIsFocused] = React.useState(false);\n  const [value, setValue] = React.useState(props.value || \"\");\n\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    setIsFocused(true);\n    props.onFocus?.(e);\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    setIsFocused(false);\n    props.onBlur?.(e);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n    props.onChange?.(e);\n  };\n\n  return (\n    <div className=\"group relative\">\n      <motion.input\n        ref={ref}\n        className={cn(sketchInputVariants({ variant, state }), className)}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        {...props}\n      />\n      {inkFlow && (\n        <motion.div\n          className=\"absolute bottom-0 left-0 h-1 bg-primary/50\"\n          initial={{ width: \"0%\", opacity: 0 }}\n          animate={{\n            width: `${Math.min((value?.toString().length || 0) * 8, 100)}%`,\n            opacity: isFocused ? 0.5 : 0,\n          }}\n          transition={{\n            type: \"spring\",\n            stiffness: 400,\n            damping: 25,\n            mass: 0.5,\n          }}\n          style={{\n            background:\n              \"linear-gradient(90deg, var(--primary) 0%, transparent 100%)\",\n            filter: \"blur(2px)\",\n          }}\n        />\n      )}\n      {state === \"error\" && (\n        <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n          <svg\n            className=\"size-5 text-destructive\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </div>\n      )}\n      {state === \"success\" && (\n        <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n          <svg\n            className=\"h-5 w-5 text-green-500\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M5 13l4 4L19 7\"\n            />\n          </svg>\n        </div>\n      )}\n    </div>\n  );\n});\nSketchInput.displayName = \"SketchInput\";\n\nexport { SketchInput, sketchInputVariants };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}