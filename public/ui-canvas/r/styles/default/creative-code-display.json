{
  "name": "creative-code-display",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion",
    "next-themes",
    "prismjs"
  ],
  "files": [
    {
      "path": "ui-canvas/creative-code-display.tsx",
      "content": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useTheme } from \"next-themes\";\nimport { cn } from \"@/lib/utils\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport \"prismjs/components/prism-typescript\";\nimport \"prismjs/components/prism-jsx\";\nimport \"prismjs/components/prism-tsx\";\nimport \"prismjs/plugins/line-numbers/prism-line-numbers.css\";\nimport \"prismjs/plugins/line-numbers/prism-line-numbers\";\nimport { Check, Clipboard, Download, Code2 } from \"lucide-react\";\nimport { cva } from \"class-variance-authority\";\n\nconst containerVariants = cva(\n  \"relative overflow-hidden rounded-xl border shadow-lg backdrop-blur-sm transition-all duration-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-slate-200 bg-gradient-to-br from-white via-slate-50 to-slate-100 shadow-slate-200/20 dark:border-zinc-700/50 dark:from-zinc-900 dark:via-zinc-800 dark:to-zinc-900 dark:shadow-zinc-900/20\",\n        glass:\n          \"border-slate-200/50 bg-white/80 shadow-xl backdrop-blur-xl transition-all duration-300 hover:border-slate-300 hover:shadow-2xl dark:border-black/20 dark:bg-black/10 dark:hover:border-black/30\",\n        solid:\n          \"border-slate-200 bg-gradient-to-br from-slate-50 to-white dark:border-neutral-700 dark:from-neutral-900 dark:to-neutral-800\",\n        terminal:\n          \"border-emerald-200/30 bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 font-mono text-emerald-400/90 shadow-2xl shadow-emerald-900/10 [text-shadow:0_0_12px_rgba(16,185,129,0.2)] dark:border-emerald-900/50 dark:from-zinc-950 dark:via-zinc-900 dark:to-zinc-950 dark:shadow-emerald-900/20\",\n      },\n      size: {\n        sm: \"p-3 text-sm\",\n        default: \"p-4 text-base\",\n        lg: \"p-6 text-lg\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\ninterface CreativeCodeDisplayProps {\n  code: string;\n  language?: string;\n  showLineNumbers?: boolean;\n  className?: string;\n  variant?: \"default\" | \"glass\" | \"solid\" | \"terminal\";\n  size?: \"sm\" | \"default\" | \"lg\";\n  showControls?: boolean;\n  title?: string;\n}\n\nexport default function CreativeCodeDisplay({\n  code,\n  language = \"javascript\",\n  showLineNumbers = true,\n  className,\n  variant = \"default\",\n  size = \"default\",\n  showControls = true,\n  title,\n}: CreativeCodeDisplayProps) {\n  const { theme } = useTheme();\n  const [copied, setCopied] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n\n  React.useEffect(() => {\n    if (showLineNumbers) {\n      Prism.highlightAll();\n    }\n  }, [code, showLineNumbers]);\n\n  const handleCopy = async () => {\n    await navigator.clipboard.writeText(code);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const handleDownload = () => {\n    const blob = new Blob([code], { type: \"text/plain\" });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `code.${language}`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  const isDark = theme === \"dark\" || variant === \"terminal\";\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className={cn(containerVariants({ variant, size }), className)}\n      onHoverStart={() => setIsHovered(true)}\n      onHoverEnd={() => setIsHovered(false)}\n    >\n      <AnimatePresence>\n        {isHovered && variant !== \"terminal\" && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: isDark ? 0.5 : 0.3 }}\n            exit={{ opacity: 0 }}\n            className={cn(\n              \"pointer-events-none absolute inset-0 bg-gradient-to-br\",\n              isDark\n                ? \"from-primary/20 to-transparent\"\n                : \"from-primary/10 to-transparent\",\n            )}\n          />\n        )}\n      </AnimatePresence>\n\n      {variant === \"terminal\" && (\n        <>\n          <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_50%_120%,rgba(16,185,129,0.1),transparent_80%)]\" />\n          <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_50%_0%,rgba(16,185,129,0.05),transparent_50%)]\" />\n          <div className=\"absolute right-0 top-0 h-40 w-40 bg-emerald-500/5 blur-3xl\" />\n          <div className=\"absolute bottom-0 left-0 h-40 w-40 bg-emerald-500/5 blur-3xl\" />\n        </>\n      )}\n\n      {showControls && (\n        <div className=\"relative\">\n          {title && (\n            <div className=\"mb-4 flex items-center gap-2 text-sm font-medium\">\n              <Code2\n                className={cn(\n                  \"h-4 w-4\",\n                  isDark ? \"text-primary\" : \"text-slate-600\",\n                )}\n              />\n              <span\n                className={cn(\n                  \"text-muted-foreground\",\n                  isDark ? \"text-slate-400\" : \"text-slate-600\",\n                )}\n              >\n                {title}\n              </span>\n            </div>\n          )}\n          <div className=\"absolute right-0 top-0 flex items-center gap-2\">\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={handleCopy}\n              className={cn(\n                \"rounded-lg p-2 transition-colors\",\n                isDark\n                  ? \"bg-primary/10 hover:bg-primary/20\"\n                  : \"bg-slate-100 hover:bg-slate-200\",\n              )}\n              title=\"Copy code\"\n            >\n              <AnimatePresence mode=\"wait\">\n                {copied ? (\n                  <motion.div\n                    initial={{ scale: 0 }}\n                    animate={{ scale: 1 }}\n                    exit={{ scale: 0 }}\n                    key=\"check\"\n                  >\n                    <Check className=\"h-4 w-4 text-green-500\" />\n                  </motion.div>\n                ) : (\n                  <motion.div\n                    initial={{ scale: 0 }}\n                    animate={{ scale: 1 }}\n                    exit={{ scale: 0 }}\n                    key=\"copy\"\n                  >\n                    <Clipboard\n                      className={cn(\n                        \"h-4 w-4\",\n                        isDark ? \"text-primary\" : \"text-slate-600\",\n                      )}\n                    />\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </motion.button>\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              onClick={handleDownload}\n              className={cn(\n                \"rounded-lg p-2 transition-colors\",\n                isDark\n                  ? \"bg-primary/10 hover:bg-primary/20\"\n                  : \"bg-slate-100 hover:bg-slate-200\",\n              )}\n              title=\"Download code\"\n            >\n              <Download\n                className={cn(\n                  \"h-4 w-4\",\n                  isDark ? \"text-primary\" : \"text-slate-600\",\n                )}\n              />\n            </motion.button>\n          </div>\n        </div>\n      )}\n\n      <pre\n        className={cn(\n          \"scrollbar-thin scrollbar-track-transparent hover:scrollbar-thumb-primary/30 mt-2 overflow-x-auto rounded\",\n          showControls && title && \"mt-6\",\n          showLineNumbers && \"line-numbers\",\n          isDark ? \"scrollbar-thumb-primary/20\" : \"scrollbar-thumb-slate-300\",\n        )}\n      >\n        <code className={`language-${language} block`}>{code}</code>\n      </pre>\n\n      {variant === \"glass\" && (\n        <div\n          className={cn(\n            \"absolute inset-0 -z-10 bg-gradient-to-br opacity-50\",\n            isDark\n              ? \"from-primary/10 via-transparent to-primary/5\"\n              : \"to-primary/2 from-primary/5 via-transparent\",\n          )}\n        />\n      )}\n    </motion.div>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}